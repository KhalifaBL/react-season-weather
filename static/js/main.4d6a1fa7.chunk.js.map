{"version":3,"sources":["SeasonsDisplay.js","LoadingComponent.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonsDisplay","props","console","log","lat","month","season","Date","getMonth","className","charAt","toUpperCase","slice","LoadingComponent","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8MAIMA,G,YAAe,CACjBC,OAAQ,CACJC,KAAM,+BACNC,SAAU,OAEdC,OAAQ,CACJF,KAAM,kCACNC,SAAU,eA4BHE,EAhBQ,SAAAC,GACnBC,QAAQC,IAAIF,EAAMG,KAClB,IAVeA,EAAKC,EAUdC,GAVSF,EAUUH,EAAMG,KAVXC,GAUgB,IAAIE,MAAOC,YATnC,GAAKH,EAAQ,EACdD,EAAM,EAAI,SAAW,SAGrBA,EAAM,EAAI,SAAW,UAGJ,EAGDT,EAAaW,GAAhCT,EAHoB,EAGpBA,KAAMC,EAHc,EAGdA,SAEd,OACI,yBAAKW,UAAWH,GACZ,yBAAKG,UAAU,kBAAiB,uBAAGA,UAAS,UAAKX,EAAL,0BAC5C,wBAAIW,UAAS,UAAKH,EAAL,WAAsBA,EAAOI,OAAO,GAAGC,cAAgBL,EAAOM,MAAM,GAAjF,UACA,wBAAIH,UAAU,eAAeZ,KC7BnCgB,G,OAAmB,SAACZ,GACtB,OACI,yBAAKQ,UAAU,+BACX,yBAAKA,UAAU,6BACX,yBAAKA,UAAU,kBAAkBR,EAAMa,UAE3C,+BAIZD,EAAiBE,aAAe,CAC5BD,QAAS,eAEED,QCXTG,E,2MACFC,MAAQ,CAAEb,IAAK,KAAMc,aAAc,I,mFAEd,IAAD,OAChBC,OAAOC,UAAUC,YAAYC,oBACzB,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAEpB,IAAKmB,EAASE,OAAOC,cACjD,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAAEN,aAAcS,EAAIb,e,sCAK7C,MAAgC,KAA5Bc,KAAKX,MAAMC,aACJ,qDAC6B,KAA5BU,KAAKX,MAAMC,cAA0BU,KAAKX,MAAMb,IAIhD,6BACJ,kBAAC,EAAD,CAAgBA,IAAKwB,KAAKX,MAAMb,OAJ5B,6BACJ,kBAAC,EAAD,CAAkBU,QAAQ,qCADtB,O,+BAWZ,OACI,6BAAMc,KAAKC,qB,GA1BLC,IAAMC,WA+BxBC,IAASC,OAAO,kBAAC,EAAD,MAAaC,SAASC,eAAe,U","file":"static/js/main.4d6a1fa7.chunk.js","sourcesContent":["import React from 'react';\nimport './SeasonsDisplay.css';\nimport { stringLiteral } from '@babel/types';\n\nconst seasonConfig = {\n    summer: {\n        text: \"Ughhh, Let's go to the beach\",\n        iconName: 'sun'\n    },\n    winter: {\n        text: \"Burrrr, Let's Netflix and Chill\",\n        iconName: 'snowflake'\n\n    }\n}\nconst getSeason = (lat, month) => {\n    if (month > 2 && month < 9) {\n        return lat > 0 ? 'summer' : 'winter';\n    }\n    else {\n        return lat > 0 ? 'winter' : 'summer';\n    }\n}\nconst SeasonsDisplay = props => {\n    console.log(props.lat);\n    const season = getSeason(props.lat, new Date().getMonth());\n    const { text, iconName } = seasonConfig[season];\n\n    return (\n        <div className={season}>\n            <div className=\"icon-container\"><i className={`${iconName} big-icon-size icon`} /></div>\n            <h1 className={`${season}-title`}>{season.charAt(0).toUpperCase() + season.slice(1)} Time </h1>\n            <h2 className=\"description\">{text}</h2>\n\n        </div>\n    );\n\n\n}\nexport default SeasonsDisplay;","import React from 'react'\nimport './LoadingComponent.css'\n\nconst LoadingComponent = (props) => {\n    return (\n        <div className=\"ui segment loader-container\">\n            <div className=\"ui active inverted dimmer\">\n                <div className=\"ui text loader\">{props.message}</div>\n            </div>\n            <p></p>\n        </div>\n    );\n}\nLoadingComponent.defaultProps = {\n    message: 'Loading ...'\n};\nexport default LoadingComponent;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonsDisplay from './SeasonsDisplay'\nimport LoadingComponent from './LoadingComponent'\n\nclass App extends React.Component {\n    state = { lat: null, errorMessage: '' }\n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            position => this.setState({ lat: position.coords.latitude }),\n            err => this.setState({ errorMessage: err.message })\n\n        );\n    }\n    renderContent() {\n        if (this.state.errorMessage !== '') {\n            return <div>An error has occured</div>\n        } else if ((this.state.errorMessage === '') && (!this.state.lat)) {\n            return (<div>\n                <LoadingComponent message=\"Please allow us location request\" ></LoadingComponent> </div>);\n        } else {\n            return (<div>\n                <SeasonsDisplay lat={this.state.lat} ></SeasonsDisplay>\n            </div>);\n\n        }\n    }\n    render() {\n\n        return (\n            <div>{this.renderContent()}</div>\n        );\n\n    }\n}\nReactDOM.render(<App></App>, document.getElementById('root'));"],"sourceRoot":""}